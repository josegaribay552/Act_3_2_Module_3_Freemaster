/*!
    @page hello_world_s32k144_group Hello World
    @brief Basic application that presents the project scenarios for S32 SDK
    
    ## Application description ##
    _____
    The purpose of this demo is to provide the user with an out-of-the box 
    example application for S32K144 platform, using S32 SDK.
    The demo uses hardware abstraction layer primitives for PCC and PORT
    modules in order to toggle two LEDs alternatively.
    
    ## Prerequisites ##
    _____
    To run the example you will need to have the following items:
    - 1 S32K144 board
    - 1 Power Adapter 12V (if the board cannot be powered from the USB port)
    - 1 Personal Computer
    - Debug probe (JLink, PEmicro, OpenSDA)
    
    ## Boards supported ##
    _____
    The following boards are supported by this application:
    - S32K144EVB-Q100
    - S32K144-MB
    
    ## Hardware Wiring ##
    _____
    The following connections must be done to for this example application to work:
    
    PIN FUNCTION    |	S32K144EVB-Q100	        |	S32K144-MB
    ----------------|---------------|--------------
    RED_LED	(\b PTD15) |RGB_RED - wired on the board	|	J12.17 - J11.31
    GREEN_LED (\b PTD16) |RGB_GREEN - wired on the board  |	J12.16 - J11.30
    
    ## How to run ##
    _____
    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New -> \b S32DS \b Project \b From \bExample and select \b hello_world_s32k144. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    Wait for the S32 Configuration was initialized and ready.

    #### 2. Generating the S32 configuration ####
    The example will run without an active configuration, however if any changes are required, a configuration needs to be generated.
    The initial configuration will have the same settings as the default example settings.
    Left click on the current project, then click "Open S32 Configuration" (it has blue chip symbol on the top of the toolbar).
    In S32 Configuration menu, click on the desired configurator (Pins, Clock, Peripherals, etc.). Clicking on any one of those will generate all the components.
    Pay attention to any error and warning message. If any configured value is invalid, they will be shown for user.
    Make the desired changes (if any) then click "Update Code".

    #### 3. Building the project ####
    Select the configuration to be built \b RAM (Debug_RAM) or \b FLASH (Debug_FLASH) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).     
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be four debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b hello_world_s32k144_debug_ram_jlink | Debug the RAM configuration using Segger Jlink debuggers
     \b hello_world_s32k144_debug_flash_jlink | Debug the FLASH configuration using Segger Jlink debuggers
     \b hello_world_s32k144_debug_ram_pemicro | Debug the RAM configuration using PEMicro debuggers 
     \b hello_world_s32k144_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers 
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.
    
    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.
    

*/

